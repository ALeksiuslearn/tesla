/* общаемся ко всем с помощью тега * */
/* border-box говорит браузеру учитывать любые границы и внутренние отступы в значениях, которые вы указываете в ширине и высоте элемента. Если вы выставите элементу ширину 100 пикселей, то эти 100 пикселей 
будут включать в себя границы и внутренние отступы, а контент сожмётся, чтобы выделить для них место. Обычно это упрощает работу с размерами элементов.  */
* {
  box-sizing: border-box;
}
a {
  color: #fff;
  /* убираем все декорации для текста у ссылок и подчеркивание */
  text-decoration: none;
}

body {
  background-color: #0b0b0b;
  color: #fff;
  font-size: 24px;
  line-height: 28px;
  /* font-family: 'Roboto', sans-serif; */
  font-family: "Roboto Condensed", sans-serif;
}
.header {
  /* пишем только в том случае если надо, что бы картинка стала на всю высоту экрана */
  /* берем vh, а не %, потому что % берут у своего родителя, а там тоже надо задавать. */
  height: 100vh;
  /* поднимаем слайдер */
  position: absolute;
  z-index: 5;
  /* у нас немного затемнено */
  background: rgba(0, 0, 0, 0.3);
  /* за счет этого он идет в центр */
  left: 0;
  right: 0;
}
.container {
  padding: 0 15px;
  /* всегда пишем макс ширину, если экран будет меньше чем 1230 пх тогда она сузится, а если больше то все по плану */
  /*  ПИШЕМ max-width, а не width что бы небыло скролинга снизу если моник не поддерживает разрешения */
  max-width: 1230px;
  /* если у блока ширина написана они не становятся по центру с помощью text-align: center */
  /* поэтому мы пишем  margin: 0 auto; */
  margin: 0 auto;
}
/* раскидываем элементы в разные стороны */
.header-top {
  display: flex;
  justify-content: space-between;
}
.logo {
  margin: 36px 0 29px 0;
}
.header-btn {
  width: 60px;
  height: 60px;
  border: 1px solid #fff;
  margin-top: 31px;
  background: rgba(255, 255, 255, 0.1);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
/* рисуем полоски */
.header-btn div {
  width: 36px;
  height: 2px;
  background-color: #fff;
  margin: 5px 0;
}
.header-content__title {
  font-size: 96px;
  line-height: 112px;
  font-family: "Roboto", sans-serif;
  margin-bottom: 40px;
}
.header-content__text {
  /* все параметры заданы в боди на строку */
  /*  задаем перенос */
  width: 284px;
  margin-bottom: 25px;
}
/* кнопка у нас является строчным элементом и к нему не все свойства применяются, поэтому мы должны ему задать 
 display: inline-block;*/
.button {
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid #ffffff;
  padding: 30px 60px 30px 60px;
  display: inline-block;
  /* анимация замедления для псевдо класса hover */
  transition: all 0.5s;
}
.button:hover {
  background-color: #770302;
}
.menu {
  background-color: #000;
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  /* эффект будет с задержкой(в нашем случае это появление меню) и эффект будет виден */
  transition: all 0.5s;
  z-index: 7;
}
/* пишем слитно, это для того что бы наше меню при нажатии появлялось. */
.menu.active {
  position: absolute;
  left: 0;
}
/* пишем дополнительный класс, что бы можно было на него релатив повесить для кнопочки 
close-btn */
.conteiner-menu {
  position: relative;
}
.close-btn {
  height: 50px;
  width: 50px;
  position: absolute;
  right: 15px;
  top: 31px;
  cursor: pointer;
}
.close-btn:hover {
  background-color: red;
}
/* делаем крестик внутри кнопочки */
.close-btn::before,
.close-btn::after {
  content: "";
  width: 70px;
  height: 2px;
  background-color: #fff;
  position: absolute;
  /* прижимает к левому краю наши бефор и афтер */
  transform-origin: left;
}
.close-btn:hover::before,
.close-btn:hover::after {
  background-color: blue;
}
.close-btn::before {
  transform: rotate(-45deg);
  /* для опускания нашего крестика половинки */
  bottom: -1px;
}
.close-btn::after {
  transform: rotate(45deg);
}
.menu__list {
  height: 100vh;
  display: flex;
  align-items: center;
}
.menu__list ul {
  list-style: none;
}
.menu__list a {
  font-size: 48px;
  line-height: 56px;
  font-weight: 700;

  border-bottom: 3px solid #b70021;
  display: inline-block;
  /* резервируем немного справа места  */
  padding: 30px 25px 14px 0;
  /* что бы линии растянулись до нужной нам ширины по макету */
  min-width: 368px;
  transition: all 0.5s;
}
.menu__list a:hover {
  border-color: blue;
  color: white;
  /* увеличение на 20% текста */
  transform: scale (1.2);
  /* увеличиваться текст при этом уходить вправо, для адаптива удобнее */
  margin-left: 37px;
}

.slider__item {
  /* ставим высоту, вначале у нашего дива высота =0 поэтому картинку не будет видно. */
  height: 100vh;
  /* картинка не будет повторятся */
  background-repeat: no-repeat;
  /* что бы картинка растянулась на окно */
  background-size: cover;
  /* для адаптива добавим */
  background-position: center;
}

/* обращаемся конкретно к кнопкам которые у нас появились вследствии
прописывания в main.js  - slider - dots:true  что нам дало возможность выбирать слайды вручную */
/*  нашли мы название этих классов через devtools наведя на список выбора слайда */
.slider .slick-dots button {
  width: 15px;
  height: 15px;
  background-color: #0b0b0b;
  border-radius: 50%;
  border: none;
  padding: 0;
  cursor: pointer;
  /* убираем синюю рамочку */
  outline: none;
  /* внутри были цыфры и их надо убрать, это сделает их размер нулевым */
  font-size: 0;
}
/* указываем для активного слайда, цвет кружочка белый */
/* так хватит приоритетности перебить другие настройки */
.slider .slick-dots .slick-active button {
  background-color: #fff;
}
/* делаем что бы все рядом шли наши кружочки */
.slider .slick-dots li {
  display: inline-block;
  margin: 0 5px;
}
/* надо приподнять наши кружочки */
.slider .slick-dots {
  /* мы их приподняли но их не видно, так как они находятся за нашим хедером, z-index ставим выше того который был в хедере 5. */
  position: relative;
  z-index: 6;
  /* это делается для того что бы наши точки не липли к левому краю */
  /* сузицили ширину, затем центрировали с помощью маржин и приподняли чутка - 55пх */
  margin: -55px auto 0;
  max-width: 1230px;
  padding: 0 15px;
}
.statistics {
  /* 105px+ 55px которые были забраны у слик дотс */
  margin: 160px 0 100px;
}
.statistics-items {
  display: flex;
  justify-content: space-around;
  text-align: center;
}
/* .statistics-item {
} */
.statistics-item__title {
  margin-bottom: 19px;
  margin-left: -20px;
}
.statistics-item__num {
  font-size: 96px;
  line-height: 112px;
  margin-bottom: 7px;
  font-family: "Roboto", sans-serif;
}
.statistics .statistics-item__num span {
  /* задаем по новому, так как эти параметры были изменены в его родителе */
  font-size: 24px;
  line-height: 28px;
  /* margin-left: -7px; */
  font-family: "Roboto Condensed", sans-serif;
}

.statistics-item__description {
  color: #b70021;
}

.statistics-item__num--speed span {
  display: inline-block;
  position: relative;
}
.statistics-item__num--speed span::before {
  content: "+";
  position: absolute;
  top: -60px;
}
.video {
  margin-bottom: 100px;
}

.advantages-inner__row {
  margin-bottom: 100px;
  display: flex;
  justify-content: space-between;
  /* центрируем по вертикали */
  align-items: center;
  position: relative;
}
/* что бы вторая картинка и сенсоры были рядом ПОЧЕМУ ТАК? 
https://youtu.be/XrMVVyhTrec?t=5184 */
.advantages-descr {
  max-width: 570px;
  width: 100%;
}

.advantages__title {
  color: #b70021;
  font-size: 36px;
  line-height: 42px;
  /* что бы наш титл был слева сверху, нельзя ему задавать параметры четкие, поэтому ауто */
  position: absolute;
  top: 0;
}
/* продолжение этого момента */
.advantages__title--bottom {
  right: 0;
  bottom: 0;
  top: auto;
}
.advantages__text {
  color: #ffffff;
  max-width: 303px;
  margin-top: 101px;
}
.advantages__text--sensors {
  list-style-type: none;
}

.design-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 100px;
}
.design-row__item {
  max-width: 570px;
  width: 100%;
  display: flex;
  justify-content: space-between;
  padding-right: 15px;
}
.design-row__item-num {
  color: #b70021;
}

.design-row__item-text {
  max-width: 430px;
  margin-bottom: 100x;
  padding-top: 25px;
}
.footer {
  background-color: #690102;
  padding: 83px 0 20px;
}
.footer-btn {
  text-align: center;
  margin-bottom: 83px;
}
.footer-btn .button:hover {
  background-color: #0b0b0b;
}
.footer-copy {
  font-weight: 700;
  text-align: center;
}
.footer-copy ul {
  list-style: none;
}
.footer-copy li {
  display: inline-block;
  padding: 0 10px;
  position: relative;
}
/* li+li вставится перед каждой li кроме первой */
.footer-copy li + li::before {
  content: "|";
  position: absolute;
  left: -5px;
}
